#######################################################################################################################################
# Configuration file for Derby Test Database 
#######################################################################################################################################

#############################################
# 	DATABASE: DERBY
#############################################
db.type=10
db.install.dir=C:/ApacheDerby/db-derby-10.14.2.0-bin/bin

#db.connectionpool- The number of connections to place in the pool
db.connectionpool.size=10
db.connect.type=LOCAL,CREATE
db.connect.client.statementcache.flag=ON
db.connect.client.statementcache.size=20
db.server.startup=ON
db.host.name=localhost
db.host.port=1527

#DataSource Type
#	Values = [ Default | HikariCP ]
db.datasource.type=Default

# DATABASE DRIVER
#	Embedded Derby supports multiple users in one JVM
#	To get this to get picked up in TomCat 7.0 (derby.jar) add this to the project's class path via Build Configurations
db.driver=org.apache.derby.jdbc.EmbeddedDriver

#DATABASE NAME  - only one database per configuration file
#	This is PARAM {0} in all substitutions below.
db.location=C:/Users/supratim1/Shoes.com/CodeBase/DerbyPOC/
db.name=HighPerfDb
db.username=
db.password=
db.backup.location=C:/Users/supratim1/Shoes.com/CodeBase/DerbyPOC/db-backup
db.backup.name=HighPerfDb
#db.backup.validation.sql.1=SELECT schemaname, tablename, SYSCS_UTIL.SYSCS_CHECK_TABLE(schemaname, tablename) FROM sys.sysschemas s, sys.systables t WHERE s.schemaid = t.schemaid
#############################################
# 	DATABASE: SETUP DDL: Tables, Keys
#############################################
#db.setup.sql.file.1=DDL-TestDB.ddl
#############################################
# 	DATABASE: CONNECTION INFORMATION
#############################################

#db.autocommit = TRUE | FALSE- Whether or not auto commit is enabled on the connections
db.autocommit=FALSE

#############################################
# 	DATABASE: SETUP VALIDATION
#############################################
#db.sql.existence.1=SELECT 1 FROM TEST_TABLE FETCH NEXT 1 ROWS ONLY FOR READ ONLY WITH UR

#db.sql.test.1=SELECT 1 FROM TEST_TABLE FETCH NEXT 1 ROWS ONLY FOR READ ONLY WITH UR